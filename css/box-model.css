/* 
Modelo de caja: Es la forma en que CSS ve a los elementos HTML y ¿como los ve?, los ve como si fueran cajas con las siguientes propiedades:
1. El contenido (Content box) que es el texto del elemento HTML, tomando en cuenta sus dimensiones (width & height).
2. El relleno (padding) que es la distancia interna que hay del contenido (Content box) al borde (border).
3. El borde (border) que es lo que delimita cada uno de los elementos HTML
4. El margen (margin) son las distancias externas que hay entre un elemento HTML y otros,  sean hermanos o padres.

Dentro del modelo de caja hay que considerar que una caja tendra 4 lados (que van en el sentido de las manesillas del reloj):
1. Arriba (top)
2. Derecha (right)
3. Abajo (bottom)
4. izquierda (Left)
*/

body {
    margin: 0;
    border: 0;
    padding: 0️⃣;
}

h1 {
    border-width: 3px;
    border-style: solid;
}

a{
    text-decoration: none;
}
.ejemplo1 {
    width: 400px;
    height: 200px;
    border-width: 3px;
    border-style: solid;
}

.ejemplo2 {
    width: 400px;
    height: 200px;
    border-color: green;
    border-top-color: red;
    border-width: thick;
    border-style: solid;
    border: 2px dashed blue; /* Esta propiedad es un shorthand que sintetisa todas las propiedades del border */
}

.caja-uno,
.caja-dos {
    background-color: chocolate;
    border: medium solid orange;

    /* Esto aplica para margin y padding: */
    /* 1 valor = aplicar a los 4 lados. */
    margin: 20px;
    padding: 20px;
    /* 2 valores = primer valor es para top y bottom, el segundo valor para los lados horizontales right y left. */
    margin: 40px 20px;
    padding: 20px 40px;
    /* 3 valores = primer valor es para top, el segundo valor para los lados horizontales (right y left) y el tercer valor es para bottom. */
    margin: 50px 30px 0;
    padding: 0 40px 20px;
    /* 4 valores = En el sentido de las manesillas del reloj. Primer valor es para top, segundo valor para right, tercer valor para bottom y el cuarto valor para left. */
    margin: 100px 50px 30px 0;
    padding: 0 40px 20px 50px;
}


/* ---------------DIFERENCIA ENTRE ELEMENTOS DE LÍNEA Y ELEMENTOS DE BLOQUE--------------- */
/* 
Elementos o cajas de línea:
- Ocupan el espacio necesario para mostrar su contenido.
- No tienen dimensiones modificables (alto, ancho).
- Al ocupar solamente el espacio requerido van a permitir otros elementos a su lado.
- Padding y margin laterales solo empujan a los elementos que esten al lado (en horizontal), NUNCA APLICAR PADDING Y MARGIN EN VERTICAL (osea top o bottom) PORQUE NO FUNCIONARAN.

Elementos o cajas de bloque:
- Ocupan todo el ancho disponible, lo que genera saltos de línea.
- Se ubican una encima de otra.
- Tienen dimensiones modificables, por lo que se les puede aplicar ancho y alto (width &height).
- No permiten que otros elementos esten a su lado (aunque especifique un ancho (width)) los desplazan con un salto de línea, siguen ocupando todo el espacio disponible a lo ancho, generando saltos de línea tanto arriba como abajo.
*/

.caja-linea,
.caja-bloque {
    background-color: darkcyan;
    color: white;
    width: 500px;
    height: 250px;
    border: medium solid black;
    padding: 16px;
}

.caja-bloque{
    margin: 32px;
    display: block;
}

.caja-linea {
    margin: 48px;
    display: inline;
}


/* -------------------PROPIEDAD DISPLAY-------------------- */

/* 
La propiedad display tiene los siguientes valores:
- inline
- block
- inline-block: Se comporta como un elemento de línea y acepta modificar sus dimensiones (ancho y alto) como un elemento de bloque.
- none: Oculta el elemento, no lo visualiza pero OJO si lo carga.
- table: Para tablas.
- list-item: Para elementos de lista ul y ol
- flex: Ver curso de flexbox.
- grid: Ver curso de grid css.
*/

.caja-none,
.caja-linea-bloque,
.caja-hidden {
    background: darkolivegreen;
    color: white;
    width: 600px;
    height: 300px;
    border: medium solid black;
}

.caja-linea-bloque {
    display: inline-block;
}

.caja-none {
    display: none;
}


/* -------------------PROPIEDAD VISIBILITY (VISIBILIDAD)-------------------- */

/* 
Tiene dos valores:
visible: Que muestra el elemento.
hidden: Oculta el elemento, pero conserva el espacio que este ocupa.
*/
.caja-hidden {
    visibility: visible;
}


/* -----------------------------PROPIEDAD OVERFLOW--------------------------------- */

.overflow {
    background-color: darkturquoise;
    width: 200px;
    height: 100px;
    /* overflow: visible;
    overflow: hidden;
    overflow: scroll;
    overflow: auto; */
    /* overflow-y: scroll; */
    overflow-x: scroll;
}









